{"version":3,"file":"main.js","mappings":"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","sources":["webpack:///external commonjs \"ws\"","webpack:///external node-commonjs \"http\"","webpack:///./src/utils.ts","webpack:///external commonjs \"tslib\"","webpack:///external commonjs \"yjs\"","webpack:///external commonjs \"y-protocols/sync\"","webpack:///external commonjs \"y-protocols/awareness\"","webpack:///external commonjs \"lib0/encoding\"","webpack:///external commonjs \"lib0/decoding\"","webpack:///external commonjs \"lib0/map\"","webpack:///external commonjs \"y-mongodb-provider\"","webpack:///external commonjs \"lodash/debounce\"","webpack:///./src/callback.ts","webpack:///webpack/bootstrap","webpack:///./src/main.ts"],"sourcesContent":["module.exports = require(\"ws\");","module.exports = require(\"http\");","import { encodeStateAsUpdate, applyUpdate, Doc } from 'yjs';\nimport { writeUpdate, readSyncMessage, writeSyncStep1 } from 'y-protocols/sync';\nimport {\n  Awareness,\n  encodeAwarenessUpdate,\n  applyAwarenessUpdate,\n  removeAwarenessStates,\n} from 'y-protocols/awareness';\n\nimport {\n  createEncoder,\n  writeVarUint,\n  toUint8Array,\n  writeVarUint8Array,\n  length,\n} from 'lib0/encoding';\nimport { createDecoder, readVarUint, readVarUint8Array } from 'lib0/decoding';\nimport { setIfUndefined } from 'lib0/map';\nimport { MongodbPersistence } from 'y-mongodb-provider';\nimport debounce from 'lodash/debounce';\n\nimport { callbackHandler, isCallbackSet } from './callback';\n\nconst CALLBACK_DEBOUNCE_WAIT =\n  parseInt(process.env.CALLBACK_DEBOUNCE_WAIT) || 2000;\nconst CALLBACK_DEBOUNCE_MAXWAIT =\n  parseInt(process.env.CALLBACK_DEBOUNCE_MAXWAIT) || 10000;\n\nconst wsReadyStateConnecting = 0;\nconst wsReadyStateOpen = 1;\n// const wsReadyStateClosing = 2;\n// const wsReadyStateClosed = 3;\nconst messageSync = 0;\nconst messageAwareness = 1;\n// const messageAuth = 2\n\n// disable gc when using snapshots!\nconst gcEnabled = process.env.GC !== 'false' && process.env.GC !== '0';\n// const persistenceDir = process.env.YPERSISTENCE || './dist/levelDB';\n\nexport class WSSharedDoc extends Doc {\n  awareness: Awareness;\n\n  name: string;\n\n  conns: Map<object, Set<number>>;\n\n  /**\n   * @param {string} name\n   */\n  constructor(name: string) {\n    super({ gc: gcEnabled });\n    this.name = name;\n    /**\n     * Maps from conn to set of controlled user ids. Delete all user ids from awareness when this conn is closed\n     * @type {Map<Object, Set<number>>}\n     */\n    this.conns = new Map();\n    /**\n     * @type {awarenessProtocol.Awareness}\n     */\n    this.awareness = new Awareness(this);\n    this.awareness.setLocalState(null);\n\n    const awarenessChangeHandler = (\n      {\n        // changes\n        added,\n        updated,\n        removed,\n      }: {\n        added: Array<number>;\n        updated: Array<number>;\n        removed: Array<number>;\n      },\n      // connection that made the change\n      conn: object | null\n    ) => {\n      const changedClients = added.concat(updated, removed);\n      if (conn !== null) {\n        const connControlledIDs = this.conns.get(conn);\n        if (connControlledIDs !== undefined) {\n          added.forEach((clientID) => {\n            connControlledIDs.add(clientID);\n          });\n          removed.forEach((clientID) => {\n            connControlledIDs.delete(clientID);\n          });\n        }\n      }\n      // broadcast awareness update\n      const encoder = createEncoder();\n      writeVarUint(encoder, messageAwareness);\n      writeVarUint8Array(\n        encoder,\n        encodeAwarenessUpdate(this.awareness, changedClients)\n      );\n      const buff = toUint8Array(encoder);\n      this.conns.forEach((_, c) => {\n        send(this, c, buff);\n      });\n    };\n    this.awareness.on('update', awarenessChangeHandler);\n    this.on('update', updateHandler);\n    if (isCallbackSet) {\n      this.on(\n        'update',\n        debounce(callbackHandler, CALLBACK_DEBOUNCE_WAIT, {\n          maxWait: CALLBACK_DEBOUNCE_MAXWAIT,\n        })\n      );\n    }\n  }\n}\n\nlet persistence: {\n  bindState: (docName: string, ydoc: WSSharedDoc) => void;\n  writeState: (docName: string, ydoc: WSSharedDoc) => Promise<any>;\n  provider: MongodbPersistence;\n} | null = null;\n\nconst uri =\n  'mongodb+srv://journey2:journey1234@cluster0.49jjmuc.mongodb.net/test?retryWrites=true&w=majority';\n// if (typeof persistenceDir === 'string') {\n//   console.info(`Persisting documents to \"${persistenceDir}\"`);\nconst mdb = new MongodbPersistence(uri, {\n  collectionName: 'journey',\n});\npersistence = {\n  provider: mdb,\n  bindState: async (docName, ydoc) => {\n    const persistedYdoc = await mdb.getYDoc(docName);\n    const newUpdates = encodeStateAsUpdate(ydoc);\n    mdb.storeUpdate(docName, newUpdates);\n    applyUpdate(ydoc, encodeStateAsUpdate(persistedYdoc));\n    ydoc.on('update', (update) => {\n      console.log('update', update);\n      mdb.storeUpdate(docName, update);\n    });\n  },\n  writeState: async (docName, ydoc) => {\n    // some empty function\n  },\n  // };\n};\n\nexport function setPersistence(\n  persistence_: {\n    bindState: (docName: string, ydoc: WSSharedDoc) => void;\n    writeState: (docName: string, ydoc: WSSharedDoc) => Promise<any>;\n    provider: MongodbPersistence;\n  } | null\n) {\n  persistence = persistence_;\n}\n\nexport function getPersistence(): null | {\n  bindState: (docName: string, ydoc: WSSharedDoc) => void;\n  writeState: (docName: string, ydoc: WSSharedDoc) => Promise<any>;\n} | null {\n  return persistence;\n}\n\nconst docs: Map<string, WSSharedDoc> = new Map();\n// exporting docs so that others can use it\nconst _docs = docs;\nexport { _docs as docs };\n\nconst updateHandler = (update: Uint8Array, origin: any, doc: WSSharedDoc) => {\n  const encoder = createEncoder();\n  writeVarUint(encoder, messageSync);\n  writeUpdate(encoder, update);\n  const message = toUint8Array(encoder);\n  doc.conns.forEach((_, conn) => send(doc, conn, message));\n};\n\n/**\n * Gets a Y.Doc by name, whether in memory or on disk\n *\n * docname - the name of the Y.Doc to find or create\n * gc - whether to allow gc on the doc (applies only when created)\n */\nconst getYDoc = (docname: string, gc = true): WSSharedDoc =>\n  setIfUndefined(docs, docname, () => {\n    const doc = new WSSharedDoc(docname);\n    doc.gc = gc;\n    if (persistence !== null) {\n      persistence.bindState(docname, doc);\n    }\n    docs.set(docname, doc);\n    return doc;\n  });\n\nconst _getYDoc = getYDoc;\nexport { _getYDoc as getYDoc };\n\nconst messageListener = (conn: any, doc: WSSharedDoc, message: Uint8Array) => {\n  try {\n    const encoder = createEncoder();\n    const decoder = createDecoder(message);\n    const messageType = readVarUint(decoder);\n    console.log('message:', message);\n    // eslint-disable-next-line default-case\n    switch (messageType) {\n      case messageSync:\n        writeVarUint(encoder, messageSync);\n        readSyncMessage(decoder, encoder, doc, conn);\n\n        // If the `encoder` only contains the type of reply message and no\n        // message, there is no need to send the message. When `encoder` only\n        // contains the type of reply, its length is 1.\n        if (length(encoder) > 1) {\n          send(doc, conn, toUint8Array(encoder));\n        }\n        break;\n      case messageAwareness: {\n        applyAwarenessUpdate(doc.awareness, readVarUint8Array(decoder), conn);\n        break;\n      }\n    }\n  } catch (err) {\n    console.error(err);\n    doc.emit('error', [err]);\n  }\n};\n\nconst closeConn = (doc: WSSharedDoc, conn: any) => {\n  if (doc.conns.has(conn)) {\n    const controlledIds: Set<number> = doc.conns.get(conn);\n    doc.conns.delete(conn);\n    removeAwarenessStates(doc.awareness, Array.from(controlledIds), null);\n    if (doc.conns.size === 0 && persistence !== null) {\n      // if persisted, we store state and destroy ydocument\n      persistence.writeState(doc.name, doc).then(() => {\n        doc.destroy();\n      });\n      docs.delete(doc.name);\n    }\n  }\n  conn.close();\n};\n\nconst send = (doc: WSSharedDoc, conn: any, m: Uint8Array) => {\n  if (\n    conn.readyState !== wsReadyStateConnecting &&\n    conn.readyState !== wsReadyStateOpen\n  ) {\n    closeConn(doc, conn);\n  }\n  try {\n    conn.send(m, (err: any) => {\n      // eslint-disable-next-line no-unused-expressions\n      err != null && closeConn(doc, conn);\n    });\n  } catch (e) {\n    closeConn(doc, conn);\n  }\n};\n\nconst pingTimeout = 30000;\n\nexport function setupWSConnection(\n  conn: any,\n  req: any,\n  { docName = req.url.slice(1).split('?')[0], gc = true }: any = {}\n) {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, no-param-reassign\n  conn.binaryType = 'arraybuffer';\n  // get doc, initialize if it does not exist yet\n  const doc = getYDoc(docName, gc);\n  doc.conns.set(conn, new Set());\n  // listen and reply to events\n  conn.on('message', (message: ArrayBuffer) =>\n    messageListener(conn, doc, new Uint8Array(message))\n  );\n\n  // Check if connection is still alive\n  let pongReceived = true;\n  const pingInterval = setInterval(() => {\n    if (!pongReceived) {\n      if (doc.conns.has(conn)) {\n        closeConn(doc, conn);\n      }\n      clearInterval(pingInterval);\n    } else if (doc.conns.has(conn)) {\n      pongReceived = false;\n      try {\n        conn.ping();\n      } catch (e) {\n        closeConn(doc, conn);\n        clearInterval(pingInterval);\n      }\n    }\n  }, pingTimeout);\n  conn.on('close', () => {\n    closeConn(doc, conn);\n    clearInterval(pingInterval);\n  });\n  conn.on('pong', () => {\n    pongReceived = true;\n  });\n  // put the following in a variables in a block so the interval handlers don't keep in in\n  // scope\n  {\n    // send sync step 1\n    const encoder = createEncoder();\n    writeVarUint(encoder, messageSync);\n    writeSyncStep1(encoder, doc);\n    send(doc, conn, toUint8Array(encoder));\n    const awarenessStates = doc.awareness.getStates();\n    if (awarenessStates.size > 0) {\n      const encoder = createEncoder();\n      writeVarUint(encoder, messageAwareness);\n      writeVarUint8Array(\n        encoder,\n        encodeAwarenessUpdate(doc.awareness, Array.from(awarenessStates.keys()))\n      );\n      send(doc, conn, toUint8Array(encoder));\n    }\n  }\n}\n","module.exports = require(\"tslib\");","module.exports = require(\"yjs\");","module.exports = require(\"y-protocols/sync\");","module.exports = require(\"y-protocols/awareness\");","module.exports = require(\"lib0/encoding\");","module.exports = require(\"lib0/decoding\");","module.exports = require(\"lib0/map\");","module.exports = require(\"y-mongodb-provider\");","module.exports = require(\"lodash/debounce\");","import { request } from 'http';\nimport { Map as YMap, Array as YArray } from 'yjs';\nimport { WSSharedDoc } from './utils';\n\nconst CALLBACK_URL = process.env.CALLBACK_URL\n  ? new URL(process.env.CALLBACK_URL)\n  : null;\nconst CALLBACK_TIMEOUT = Number(process.env.CALLBACK_TIMEOUT) || 5000;\nconst CALLBACK_OBJECTS = process.env.CALLBACK_OBJECTS\n  ? JSON.parse(process.env.CALLBACK_OBJECTS)\n  : {};\n\nexport const isCallbackSet = !!CALLBACK_URL;\n\nexport function callbackHandler(\n  update: Uint8Array,\n  origin: any,\n  doc: WSSharedDoc\n) {\n  const room = doc.name;\n  const dataToSend = {\n    room,\n    data: {},\n  };\n  const sharedObjectList = Object.keys(CALLBACK_OBJECTS);\n  sharedObjectList.forEach((sharedObjectName) => {\n    const sharedObjectType = CALLBACK_OBJECTS[sharedObjectName];\n    dataToSend.data[sharedObjectName] = {\n      type: sharedObjectType,\n      content: getContent(sharedObjectName, sharedObjectType, doc).toJSON(),\n    };\n  });\n  callbackRequest(CALLBACK_URL, CALLBACK_TIMEOUT, dataToSend);\n}\n\nconst callbackRequest = (url: URL, timeout: number, data: object) => {\n  const stringifiedData = JSON.stringify(data);\n  const options = {\n    hostname: url.hostname,\n    port: url.port,\n    path: url.pathname,\n    timeout,\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Content-Length': stringifiedData.length,\n    },\n  };\n  const req = request(options);\n  req.on('timeout', () => {\n    console.warn('Callback request timed out.');\n    req.destroy();\n  });\n  req.on('error', (e) => {\n    console.error('Callback request error.', e);\n    req.destroy();\n  });\n  req.write(stringifiedData);\n  req.end();\n};\n\nconst getContent = (\n  objName: string,\n  objType: string,\n  doc: WSSharedDoc\n): YMap<any> | YArray<any> | null => {\n  switch (objType) {\n    case 'Array':\n      return doc.getArray(objName);\n    case 'Map':\n      return doc.getMap(objName);\n    default:\n      return null;\n  }\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","import { Server, WebSocket } from 'ws';\nimport { createServer } from 'http';\nimport { setupWSConnection } from './utils';\n\nconst wss = new Server({ noServer: true });\n\nconst port: number = Number(process.env.PORT) || 1234;\nconst host: string = process.env.HOST || 'localhost';\n\nconst server = createServer((request, response) => {\n  response.writeHead(200, { 'Content-Type': 'text/plain' });\n  response.end('okay');\n});\n\nwss.on('connection', setupWSConnection);\n\nserver.on('upgrade', (request, socket, head) => {\n  // You may check auth of request here..\n  // See https://github.com/websockets/ws#client-authentication\n  const handleAuth = (ws: WebSocket) => {\n    wss.emit('connection', ws, request);\n  };\n  wss.handleUpgrade(request, socket, head, handleAuth);\n});\n\nserver.listen(port, host, () => {\n  console.log(`running at '${host}' on port ${port}`);\n});\n"],"names":[],"sourceRoot":""}