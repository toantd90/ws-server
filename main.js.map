{"version":3,"file":"main.js","mappings":"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","sources":["webpack:///external commonjs \"ws\"","webpack:///external node-commonjs \"http\"","webpack:///./src/utils.ts","webpack:///external commonjs \"tslib\"","webpack:///external commonjs \"yjs\"","webpack:///external commonjs \"y-protocols/sync\"","webpack:///external commonjs \"y-protocols/awareness\"","webpack:///external commonjs \"lib0/encoding\"","webpack:///external commonjs \"lib0/decoding\"","webpack:///external commonjs \"lib0/map\"","webpack:///../../libs/y-mongodb-provider/src/index.ts","webpack:///../../libs/y-mongodb-provider/src/y-mongodb.ts","webpack:///external commonjs \"lib0/promise\"","webpack:///../../libs/y-mongodb-provider/src/adapter.ts","webpack:///external commonjs \"mongodb\"","webpack:///../../libs/y-mongodb-provider/src/utils.ts","webpack:///external commonjs \"lib0/binary\"","webpack:///external node-commonjs \"buffer\"","webpack:///external commonjs \"lodash/debounce\"","webpack:///./src/callback.ts","webpack:///webpack/bootstrap","webpack:///./src/main.ts"],"sourcesContent":["module.exports = require(\"ws\");","module.exports = require(\"http\");","import { encodeStateAsUpdate, applyUpdate, Doc } from 'yjs';\nimport { writeUpdate, readSyncMessage, writeSyncStep1 } from 'y-protocols/sync';\nimport {\n  Awareness,\n  encodeAwarenessUpdate,\n  applyAwarenessUpdate,\n  removeAwarenessStates,\n} from 'y-protocols/awareness';\n\nimport {\n  createEncoder,\n  writeVarUint,\n  toUint8Array,\n  writeVarUint8Array,\n  length,\n} from 'lib0/encoding';\nimport {\n  createDecoder,\n  readVarUint,\n  readVarUint8Array,\n  readVarString,\n} from 'lib0/decoding';\nimport { setIfUndefined } from 'lib0/map';\nimport { MongodbPersistence } from '@arc/y-mongodb-provider';\nimport debounce from 'lodash/debounce';\n\nimport { callbackHandler, isCallbackSet } from './callback';\n\nconst CALLBACK_DEBOUNCE_WAIT =\n  parseInt(process.env.CALLBACK_DEBOUNCE_WAIT) || 2000;\nconst CALLBACK_DEBOUNCE_MAXWAIT =\n  parseInt(process.env.CALLBACK_DEBOUNCE_MAXWAIT) || 10000;\n\nconst wsReadyStateConnecting = 0;\nconst wsReadyStateOpen = 1;\n// const wsReadyStateClosing = 2;\n// const wsReadyStateClosed = 3;\nconst messageSync = 0;\nconst messageAwareness = 1;\n// const messageAuth = 2\n\n// disable gc when using snapshots!\nconst gcEnabled = process.env.GC !== 'false' && process.env.GC !== '0';\n\nexport class WSSharedDoc extends Doc {\n  awareness: Awareness;\n\n  name: string;\n\n  conns: Map<object, Set<number>>;\n\n  /**\n   * @param {string} name\n   */\n  constructor(name: string) {\n    super({ gc: gcEnabled });\n    this.name = name;\n    /**\n     * Maps from conn to set of controlled user ids. Delete all user ids from awareness when this conn is closed\n     * @type {Map<Object, Set<number>>}\n     */\n    this.conns = new Map();\n    /**\n     * @type {awarenessProtocol.Awareness}\n     */\n    this.awareness = new Awareness(this);\n    this.awareness.setLocalState(null);\n\n    const awarenessChangeHandler = (\n      {\n        // changes\n        added,\n        updated,\n        removed,\n      }: {\n        added: Array<number>;\n        updated: Array<number>;\n        removed: Array<number>;\n      },\n      // connection that made the change\n      conn: object | null\n    ) => {\n      const changedClients = added.concat(updated, removed);\n      if (conn !== null) {\n        const connControlledIDs = this.conns.get(conn);\n        if (connControlledIDs !== undefined) {\n          added.forEach((clientID) => {\n            connControlledIDs.add(clientID);\n          });\n          removed.forEach((clientID) => {\n            connControlledIDs.delete(clientID);\n          });\n        }\n      }\n      // broadcast awareness update\n      const encoder = createEncoder();\n      writeVarUint(encoder, messageAwareness);\n      writeVarUint8Array(\n        encoder,\n        encodeAwarenessUpdate(this.awareness, changedClients)\n      );\n      const buff = toUint8Array(encoder);\n      this.conns.forEach((_, c) => {\n        send(this, c, buff);\n      });\n    };\n    this.awareness.on('update', awarenessChangeHandler);\n    this.on('update', updateHandler);\n    if (isCallbackSet) {\n      this.on(\n        'update',\n        debounce(callbackHandler, CALLBACK_DEBOUNCE_WAIT, {\n          maxWait: CALLBACK_DEBOUNCE_MAXWAIT,\n        })\n      );\n    }\n  }\n}\n\nlet persistence: {\n  bindState: (docName: string, ydoc: WSSharedDoc) => void;\n  writeState: (docName: string, ydoc: WSSharedDoc) => Promise<any>;\n  provider: MongodbPersistence;\n} | null = null;\n\nconst mongoDBUri = process.env.MONGODB_URI;\nconsole.info(`Persisting documents to \"${mongoDBUri}\"`);\nconst mdb = new MongodbPersistence(mongoDBUri);\npersistence = {\n  provider: mdb,\n  bindState: async (docName, ydoc) => {\n    const persistedYdoc = await mdb.getYDoc(docName);\n    const newUpdates = encodeStateAsUpdate(ydoc);\n    mdb.storeUpdate(docName, newUpdates);\n    applyUpdate(ydoc, encodeStateAsUpdate(persistedYdoc));\n    ydoc.on('update', (update) => {\n      mdb.storeUpdate(docName, update);\n    });\n  },\n  writeState: async (docName, ydoc) => {\n    // some empty function\n  },\n  // };\n};\n\nexport function setPersistence(\n  persistence_: {\n    bindState: (docName: string, ydoc: WSSharedDoc) => void;\n    writeState: (docName: string, ydoc: WSSharedDoc) => Promise<any>;\n    provider: MongodbPersistence;\n  } | null\n) {\n  persistence = persistence_;\n}\n\nexport function getPersistence(): null | {\n  bindState: (docName: string, ydoc: WSSharedDoc) => void;\n  writeState: (docName: string, ydoc: WSSharedDoc) => Promise<any>;\n} | null {\n  return persistence;\n}\n\nconst docs: Map<string, WSSharedDoc> = new Map();\n// exporting docs so that others can use it\nconst _docs = docs;\nexport { _docs as docs };\n\nconst updateHandler = (update: Uint8Array, origin: any, doc: WSSharedDoc) => {\n  const encoder = createEncoder();\n  writeVarUint(encoder, messageSync);\n  writeUpdate(encoder, update);\n  const message = toUint8Array(encoder);\n  doc.conns.forEach((_, conn) => send(doc, conn, message));\n};\n\n/**\n * Gets a Y.Doc by name, whether in memory or on persistence layer (mongoDB)\n *\n * docname - the name of the Y.Doc to find or create\n * gc - whether to allow gc on the doc (applies only when created)\n */\nconst getYDoc = (docname: string, gc = true): WSSharedDoc =>\n  setIfUndefined(docs, docname, () => {\n    const doc = new WSSharedDoc(docname);\n    doc.gc = gc;\n    if (persistence !== null) {\n      persistence.bindState(docname, doc);\n    }\n    docs.set(docname, doc);\n    return doc;\n  });\n\nconst _getYDoc = getYDoc;\nexport { _getYDoc as getYDoc };\n\nconst messageListener = (conn: any, doc: WSSharedDoc, message: Uint8Array) => {\n  try {\n    const encoder = createEncoder();\n    const decoder = createDecoder(message);\n    const messageType = readVarUint(decoder);\n    // eslint-disable-next-line default-case\n    switch (messageType) {\n      case messageSync:\n        writeVarUint(encoder, messageSync);\n        readSyncMessage(decoder, encoder, doc, conn);\n\n        // If the `encoder` only contains the type of reply message and no\n        // message, there is no need to send the message. When `encoder` only\n        // contains the type of reply, its length is 1.\n        if (length(encoder) > 1) {\n          send(doc, conn, toUint8Array(encoder));\n        }\n        break;\n      case messageAwareness: {\n        const decoder2 = createDecoder(readVarUint8Array(decoder));\n        const clientID = readVarUint(decoder2);\n        console.log('new user join: ', clientID);\n        console.log('current states', doc.awareness.states);\n        applyAwarenessUpdate(doc.awareness, readVarUint8Array(decoder), conn);\n        break;\n      }\n    }\n  } catch (err) {\n    console.error(err);\n    doc.emit('error', [err]);\n  }\n};\n\nconst closeConn = (doc: WSSharedDoc, conn: any) => {\n  if (doc.conns.has(conn)) {\n    const controlledIds: Set<number> = doc.conns.get(conn);\n    doc.conns.delete(conn);\n    removeAwarenessStates(doc.awareness, Array.from(controlledIds), null);\n    if (doc.conns.size === 0 && persistence !== null) {\n      // if persisted, we store state and destroy ydocument\n      persistence.writeState(doc.name, doc).then(() => {\n        doc.destroy();\n      });\n      docs.delete(doc.name);\n    }\n  }\n  conn.close();\n};\n\nconst send = (doc: WSSharedDoc, conn: any, m: Uint8Array) => {\n  if (\n    conn.readyState !== wsReadyStateConnecting &&\n    conn.readyState !== wsReadyStateOpen\n  ) {\n    closeConn(doc, conn);\n  }\n  try {\n    conn.send(m, (err: any) => {\n      // eslint-disable-next-line no-unused-expressions\n      err != null && closeConn(doc, conn);\n    });\n  } catch (e) {\n    closeConn(doc, conn);\n  }\n};\n\nconst pingTimeout = 30000;\n\nexport function setupWSConnection(\n  conn: any,\n  req: any,\n  { docName = req.url.slice(1).split('?')[0], gc = true }: any = {}\n) {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, no-param-reassign\n  conn.binaryType = 'arraybuffer';\n  // get doc, initialize if it does not exist yet\n  const doc = getYDoc(docName, gc);\n  doc.conns.set(conn, new Set());\n  // listen and reply to events\n  conn.on('message', (message: ArrayBuffer) =>\n    messageListener(conn, doc, new Uint8Array(message))\n  );\n\n  // Check if connection is still alive\n  let pongReceived = true;\n  const pingInterval = setInterval(() => {\n    if (!pongReceived) {\n      if (doc.conns.has(conn)) {\n        closeConn(doc, conn);\n      }\n      clearInterval(pingInterval);\n    } else if (doc.conns.has(conn)) {\n      pongReceived = false;\n      try {\n        conn.ping();\n      } catch (e) {\n        closeConn(doc, conn);\n        clearInterval(pingInterval);\n      }\n    }\n  }, pingTimeout);\n  conn.on('close', () => {\n    closeConn(doc, conn);\n    clearInterval(pingInterval);\n  });\n  conn.on('pong', () => {\n    pongReceived = true;\n  });\n  // put the following in a variables in a block so the interval handlers don't keep in in\n  // scope\n  {\n    // send sync step 1\n    const encoder = createEncoder();\n    writeVarUint(encoder, messageSync);\n    writeSyncStep1(encoder, doc);\n    send(doc, conn, toUint8Array(encoder));\n    // Filter out undefined awareness state\n    const awarenessStates = new Map(\n      [...doc.awareness.getStates()].filter(([_, value]) => !!value)\n    );\n    if (awarenessStates.size > 0) {\n      const encoder = createEncoder();\n      writeVarUint(encoder, messageAwareness);\n      writeVarUint8Array(\n        encoder,\n        encodeAwarenessUpdate(doc.awareness, Array.from(awarenessStates.keys()))\n      );\n      send(doc, conn, toUint8Array(encoder));\n    }\n  }\n}\n","module.exports = require(\"tslib\");","module.exports = require(\"yjs\");","module.exports = require(\"y-protocols/sync\");","module.exports = require(\"y-protocols/awareness\");","module.exports = require(\"lib0/encoding\");","module.exports = require(\"lib0/decoding\");","module.exports = require(\"lib0/map\");","export * from './y-mongodb';\n","import * as Y from 'yjs';\nimport * as promise from 'lib0/promise';\nimport { MongoClientOptions } from 'mongodb';\nimport { MongoAdapter, TMongoConnectionlOptions } from './adapter';\nimport * as U from './utils';\n\nexport interface MongoAdapterOptions {\n  flushSize?: number;\n}\n\nexport class MongodbPersistence {\n  flushSize: number;\n\n  tr: { [docName: string]: Promise<any> };\n\n  private _transact: (\n    docName: string,\n    f: (adapter: MongoAdapter) => Promise<any>\n  ) => Promise<any>;\n\n  /**\n   * Create a y-mongodb persistence instance.\n   */\n  constructor(\n    url: string | TMongoConnectionlOptions,\n    // eslint-disable-next-line default-param-last\n    { flushSize = 400 }: MongoAdapterOptions = {},\n    clientOptions?: MongoClientOptions\n  ) {\n    const db = new MongoAdapter(url, clientOptions);\n    this.flushSize = flushSize ?? U.PREFERRED_TRIM_SIZE;\n\n    // scope the queue of the transaction to each docName\n    // -> this should allow concurrency for different rooms\n    // Idea and adjusted code from: https://github.com/fadiquader/y-mongodb/issues/10\n    this.tr = {};\n\n    /**\n     * Execute an transaction on a database. This will ensure that other processes are\n     * currently not writing.\n     *\n     * This is a private method and might change in the future.\n     */\n    this._transact = (\n      docName: string,\n      f: <T>(adapter: MongoAdapter) => Promise<T>\n    ) => {\n      // eslint-disable-next-line @typescript-eslint/no-misused-promises\n      if (!this.tr[docName]) {\n        this.tr[docName] = promise.resolve();\n      }\n\n      const currTr = this.tr[docName];\n\n      this.tr[docName] = (async () => {\n        await currTr;\n\n        let res = null;\n        try {\n          res = await f(db);\n        } catch (err) {\n          console.warn('Error during saving transaction', err);\n        }\n        return res;\n      })();\n      return this.tr[docName];\n    };\n  }\n\n  /**\n   * Create a Y.Doc instance with the data persisted in mongodb.\n   * Use this to temporarily create a Yjs document to sync changes or extract data.\n   */\n  getYDoc(docName: string): Promise<Y.Doc> {\n    return this._transact(docName, async (db: MongoAdapter) => {\n      const updates = await U.getMongoUpdates(db, docName);\n      const ydoc = new Y.Doc();\n      ydoc.transact(() => {\n        for (let i = 0; i < updates.length; i++) {\n          Y.applyUpdate(ydoc, updates[i]);\n        }\n      });\n      if (updates.length > this.flushSize) {\n        await U.flushDocument(\n          db,\n          docName,\n          Y.encodeStateAsUpdate(ydoc),\n          Y.encodeStateVector(ydoc)\n        );\n      }\n      return ydoc;\n    });\n  }\n\n  /**\n   * Store a single document update to the database.\n   */\n  storeUpdate(docName: string, update: Uint8Array): Promise<number> {\n    return this._transact(docName, (db) => U.storeUpdate(db, docName, update));\n  }\n\n  /**\n   * The state vector (describing the state of the persisted document - see https://github.com/yjs/yjs#Document-Updates) is maintained in a separate field and constantly updated.\n   *\n   * This allows you to sync changes without actually creating a Yjs document.\n   *\n   */\n  getStateVector(docName: string) {\n    return this._transact(docName, async (db) => {\n      const { clock, sv } = await U.readStateVector(db, docName);\n      let curClock = -1;\n      if (sv !== null) {\n        curClock = await U.getCurrentUpdateClock(db, docName);\n      }\n      if (sv !== null && clock === curClock) {\n        return sv;\n      }\n      // current state vector is outdated\n      const updates = await U.getMongoUpdates(db, docName);\n      const { update, sv: newSv } = U.mergeUpdates(updates);\n      await U.flushDocument(db, docName, update, newSv);\n      return newSv;\n    });\n  }\n\n  /**\n   * Get the differences directly from the database.\n   * The same as Y.encodeStateAsUpdate(ydoc, stateVector).\n   */\n  async getDiff(docName: string, stateVector: Uint8Array) {\n    const ydoc = await this.getYDoc(docName);\n    return Y.encodeStateAsUpdate(ydoc, stateVector);\n  }\n\n  /**\n   * Delete a document, and all associated data from the database.\n   * When option multipleCollections is set, it removes the corresponding collection\n   */\n  clearDocument(docName: string) {\n    return this._transact(docName, async (db) => {\n      await db.dropCollection(docName);\n    });\n  }\n\n  /**\n   * Persist some meta information in the database and associate it\n   * with a document. It is up to you what you store here.\n   * You could, for example, store credentials here.\n   */\n  setMeta(docName: string, metaKey: string, value: any) {\n    /*\tUnlike y-leveldb, we simply store the value here without encoding\n\t \t\t it in a buffer beforehand. */\n    return this._transact(docName, async (db) => {\n      await db.put(U.createDocumentMetaKey(docName, metaKey), { value });\n    });\n  }\n\n  /**\n   * Retrieve a store meta value from the database. Returns undefined if the\n   * metaKey doesn't exist.\n   */\n  getMeta(docName: string, metaKey: string): Promise<any> {\n    return this._transact(docName, async (db) => {\n      const res = await db.get({\n        ...U.createDocumentMetaKey(docName, metaKey),\n      });\n      if (!res?.['value']) {\n        return undefined;\n      }\n      return res['value'];\n    });\n  }\n\n  /**\n   * Delete a store meta value.\n   */\n  delMeta(docName: string, metaKey: string): Promise<any> {\n    return this._transact(docName, (db) =>\n      db.del({\n        ...U.createDocumentMetaKey(docName, metaKey),\n      })\n    );\n  }\n\n  /**\n   * Retrieve the names of all stored documents.\n   */\n  getAllDocNames() {\n    return this._transact('global', async (db) => {\n      return db.getCollectionNames();\n    });\n  }\n\n  /**\n   * Internally y-mongodb stores incremental updates. You can merge all document\n   * updates to a single entry. You probably never have to use this.\n   * It is done automatically every $options.flushsize (default 400) transactions.\n   */\n  flushDocument(docName: string) {\n    return this._transact(docName, async (db) => {\n      const updates = await U.getMongoUpdates(db, docName);\n      const { update, sv } = U.mergeUpdates(updates);\n      await U.flushDocument(db, docName, update, sv);\n    });\n  }\n\n  /**\n   * Delete the whole yjs mongodb\n   */\n  flushDB() {\n    return this._transact('global', async (db) => {\n      await U.flushDB(db);\n    });\n  }\n}\n","module.exports = require(\"lib0/promise\");","import { Db, MongoClient, MongoClientOptions } from 'mongodb';\n\nexport type TMongoConnectionlOptions = {\n  user?: string;\n  password?: string;\n  dbName?: string;\n  host?: string;\n};\n\nexport type TMongoCommandOptions = {\n  docName: string;\n};\n\nexport class MongoAdapter {\n  client?: MongoClient;\n\n  db?: Db;\n\n  options: MongoClientOptions;\n\n  connectionString: string;\n\n  constructor(\n    url: string | TMongoConnectionlOptions,\n    options: MongoClientOptions = {}\n  ) {\n    if (typeof url === 'object') {\n      const { user, password: pwd, dbName: db, host } = url;\n      // eslint-disable-next-line no-param-reassign\n      url = user ? `mongodb://${user}:${pwd}@${host}` : `mongodb://${host}`;\n      // eslint-disable-next-line no-param-reassign\n      url += db ? `/${db}` : '';\n    }\n    this.connectionString = url;\n    this.options = options;\n  }\n\n  async connect() {\n    if (this.db) return this.db;\n    const client = await MongoClient.connect(\n      this.connectionString,\n      this.options\n    );\n    this.db = client.db();\n    return this.db;\n  }\n\n  async collection(name: string) {\n    const client = await this.connect();\n    return client.collection(name);\n  }\n\n  async get<T extends TMongoCommandOptions>(query: T) {\n    const doc = await this.collection(query.docName);\n    return doc.findOne(query);\n  }\n\n  async put<T extends TMongoCommandOptions>(query: T, values: object) {\n    const collection = await this.collection(query.docName);\n    const doc = await collection.findOneAndUpdate(\n      query,\n      { $set: { ...query, ...values } },\n      { upsert: true, returnDocument: 'after' }\n    );\n    if (!doc) return;\n    return doc['value'];\n  }\n\n  async del<T extends TMongoCommandOptions>(query: T) {\n    const doc = await this.collection(query.docName);\n    return doc.deleteMany(query);\n  }\n\n  async readAsCursor<T extends TMongoCommandOptions>(\n    query: T,\n    { limit, reverse }: { limit?: number; reverse?: boolean } = {}\n  ) {\n    const doc = await this.collection(query.docName);\n    let curs = doc.find(query);\n    if (reverse) curs = curs.sort({ clock: -1 });\n    if (limit) curs = curs.limit(limit);\n    return curs.toArray();\n  }\n\n  /**\n   * Close connection to MongoDB instance.\n   */\n  close() {\n    this.client?.close();\n  }\n\n  async getCollectionNames() {\n    const collections = (await this.db?.listCollections().toArray()) ?? [];\n    return collections.map(({ name }) => name);\n  }\n\n  /**\n   * Delete database\n   */\n  async flush() {\n    await this.db?.dropDatabase();\n    await this.client?.close();\n  }\n\n  async dropCollection(collectionName: string) {\n    const doc = await this.collection(collectionName);\n    return doc.drop();\n  }\n}\n","module.exports = require(\"mongodb\");","import * as Y from 'yjs';\nimport * as binary from 'lib0/binary';\nimport * as encoding from 'lib0/encoding';\nimport * as decoding from 'lib0/decoding';\nimport { Buffer } from 'buffer';\nimport { WithId, Document } from 'mongodb';\nimport { MongoAdapter, TMongoCommandOptions } from './adapter';\n\nexport const PREFERRED_TRIM_SIZE = 400;\n\n/**\n * Remove all documents from db with Clock between $from and $to\n */\nexport const clearUpdatesRange = async (\n  adapter: MongoAdapter,\n  docName: string,\n  from: number,\n  to: number\n  // eslint-disable-next-line @typescript-eslint/require-await\n): Promise<void> => {\n  adapter.del({\n    docName,\n    clock: {\n      $gte: from,\n      $lt: to,\n    },\n  });\n};\n\n/**\n * Create a unique key for a update message.\n */\nexport const createDocumentUpdateKey = (docName: string, clock?: number) => {\n  if (clock !== undefined) {\n    return {\n      version: 'v1',\n      action: 'update',\n      docName,\n      clock,\n    };\n  }\n  return {\n    version: 'v1',\n    action: 'update',\n    docName,\n  };\n};\n\n/**\n * We have a separate state vector key so we can iterate efficiently over all documents\n */\nexport const createDocumentStateVectorKey = (docName: string) => ({\n  docName,\n  version: 'v1_sv',\n});\n\nexport const createDocumentMetaKey = (docName: string, metaKey: string) => ({\n  version: 'v1',\n  docName,\n  metaKey: `meta_${metaKey}`,\n});\n\nexport const getMongoBulkData = <T extends TMongoCommandOptions>(\n  adapter: MongoAdapter,\n  query: T,\n  opts: object\n) => adapter.readAsCursor(query, opts);\n\nexport const flushDB = (adapter: MongoAdapter): Promise<any> => adapter.flush();\n\n/**\n * Convert the mongo document array to an array of values (as buffers)\n */\nconst _convertMongoUpdates = (docs: WithId<Document>[]) => {\n  if (!Array.isArray(docs) || !docs.length) return [];\n\n  return docs.map((update) => update['value'].buffer);\n};\n/**\n * Get all document updates for a specific document.\n */\nexport const getMongoUpdates = async (\n  adapter: MongoAdapter,\n  docName: string,\n  opts: any = {}\n) => {\n  const docs = await getMongoBulkData(\n    adapter,\n    createDocumentUpdateKey(docName),\n    opts\n  );\n  return _convertMongoUpdates(docs);\n};\n\nexport const getCurrentUpdateClock = (\n  adapter: MongoAdapter,\n  docName: string\n): Promise<number> =>\n  getMongoBulkData(\n    adapter,\n    {\n      ...createDocumentUpdateKey(docName, 0),\n      clock: {\n        $gte: 0,\n        $lt: binary.BITS32,\n      },\n    },\n    { reverse: true, limit: 1 }\n  ).then((updates) => {\n    if (updates.length === 0) {\n      return -1;\n    }\n    return updates[0]['clock'];\n  });\n\nexport const writeStateVector = async (\n  adapter: MongoAdapter,\n  docName: string,\n  sv: Uint8Array,\n  clock: number\n) => {\n  const encoder = encoding.createEncoder();\n  encoding.writeVarUint(encoder, clock);\n  encoding.writeVarUint8Array(encoder, sv);\n  await adapter.put(createDocumentStateVectorKey(docName), {\n    value: Buffer.from(encoding.toUint8Array(encoder)),\n  });\n};\n\nexport const storeUpdate = async (\n  adapter: MongoAdapter,\n  docName: string,\n  update: Uint8Array\n): Promise<number> => {\n  const clock = await getCurrentUpdateClock(adapter, docName);\n  if (clock === -1) {\n    // make sure that a state vector is always written, so we can search for available documents\n    const ydoc = new Y.Doc();\n    Y.applyUpdate(ydoc, update);\n    const sv = Y.encodeStateVector(ydoc);\n    await writeStateVector(adapter, docName, sv, 0);\n  }\n\n  await adapter.put(createDocumentUpdateKey(docName, clock + 1), {\n    value: Buffer.from(update),\n  });\n\n  return clock + 1;\n};\n\n/**\n * For now this is a helper method that creates a Y.Doc and then re-encodes a document update.\n * In the future this will be handled by Yjs without creating a Y.Doc (constant memory consumption).\n */\nexport const mergeUpdates = (\n  updates: Array<Uint8Array>\n): { update: Uint8Array; sv: Uint8Array } => {\n  const ydoc = new Y.Doc();\n  ydoc.transact(() => {\n    for (let i = 0; i < updates.length; i++) {\n      Y.applyUpdate(ydoc, updates[i]);\n    }\n  });\n  return { update: Y.encodeStateAsUpdate(ydoc), sv: Y.encodeStateVector(ydoc) };\n};\n\nexport const decodeMongodbStateVector = (\n  buf: Uint8Array\n): { sv: Uint8Array; clock: number } => {\n  let decoder;\n  if (Buffer.isBuffer(buf)) {\n    decoder = decoding.createDecoder(buf);\n  } else if (Buffer.isBuffer(buf?.buffer)) {\n    decoder = decoding.createDecoder(buf.buffer);\n  } else {\n    throw new Error('No buffer provided at decodeMongodbStateVector()');\n  }\n  const clock = decoding.readVarUint(decoder);\n  const sv = decoding.readVarUint8Array(decoder);\n  return { sv, clock };\n};\n\nexport const readStateVector = async (\n  adapter: MongoAdapter,\n  docName: string\n) => {\n  const doc = await adapter.get({ ...createDocumentStateVectorKey(docName) });\n  if (!doc?.['value']) {\n    // no state vector created yet or no document exists\n    return { sv: null, clock: -1 };\n  }\n  return decodeMongodbStateVector(doc['value']);\n};\n\n/**\n * Merge all MongoDB documents of the same yjs document together.\n */\nexport const flushDocument = async (\n  adapter: MongoAdapter,\n  docName: string,\n  stateAsUpdate: Uint8Array,\n  stateVector: Uint8Array\n): Promise<number> => {\n  const clock = await storeUpdate(adapter, docName, stateAsUpdate);\n  await writeStateVector(adapter, docName, stateVector, clock);\n  await clearUpdatesRange(adapter, docName, 0, clock);\n  return clock;\n};\n","module.exports = require(\"lib0/binary\");","module.exports = require(\"buffer\");","module.exports = require(\"lodash/debounce\");","import { request } from 'http';\nimport { Map as YMap, Array as YArray } from 'yjs';\nimport { WSSharedDoc } from './utils';\n\nconst CALLBACK_URL = process.env.CALLBACK_URL\n  ? new URL(process.env.CALLBACK_URL)\n  : null;\nconst CALLBACK_TIMEOUT = Number(process.env.CALLBACK_TIMEOUT) || 5000;\nconst CALLBACK_OBJECTS = process.env.CALLBACK_OBJECTS\n  ? JSON.parse(process.env.CALLBACK_OBJECTS)\n  : {};\n\nexport const isCallbackSet = !!CALLBACK_URL;\n\nexport function callbackHandler(\n  update: Uint8Array,\n  origin: any,\n  doc: WSSharedDoc\n) {\n  const room = doc.name;\n  const dataToSend = {\n    room,\n    data: {},\n  };\n  const sharedObjectList = Object.keys(CALLBACK_OBJECTS);\n  sharedObjectList.forEach((sharedObjectName) => {\n    const sharedObjectType = CALLBACK_OBJECTS[sharedObjectName];\n    dataToSend.data[sharedObjectName] = {\n      type: sharedObjectType,\n      content: getContent(sharedObjectName, sharedObjectType, doc).toJSON(),\n    };\n  });\n  callbackRequest(CALLBACK_URL, CALLBACK_TIMEOUT, dataToSend);\n}\n\nconst callbackRequest = (url: URL, timeout: number, data: object) => {\n  const stringifiedData = JSON.stringify(data);\n  const options = {\n    hostname: url.hostname,\n    port: url.port,\n    path: url.pathname,\n    timeout,\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Content-Length': stringifiedData.length,\n    },\n  };\n  const req = request(options);\n  req.on('timeout', () => {\n    console.warn('Callback request timed out.');\n    req.destroy();\n  });\n  req.on('error', (e) => {\n    console.error('Callback request error.', e);\n    req.destroy();\n  });\n  req.write(stringifiedData);\n  req.end();\n};\n\nconst getContent = (\n  objName: string,\n  objType: string,\n  doc: WSSharedDoc\n): YMap<any> | YArray<any> | null => {\n  switch (objType) {\n    case 'Array':\n      return doc.getArray(objName);\n    case 'Map':\n      return doc.getMap(objName);\n    default:\n      return null;\n  }\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","import { Server, WebSocket } from 'ws';\nimport { createServer } from 'http';\nimport { setupWSConnection } from './utils';\n\nconst wss = new Server({ noServer: true });\n\nconst port: number = Number(process.env.PORT) || 8080;\nconst host: string = process.env.HOST || '0.0.0.0';\n\nconst server = createServer((request, response) => {\n  if (request.url === '/healthcheck') {\n    console.log('Health check is working');\n    response.writeHead(200, { 'Content-Type': 'text/plain' });\n    response.end('Server is healthy');\n  } else {\n    response.writeHead(200, { 'Content-Type': 'text/plain' });\n    response.end('okay');\n  }\n});\n\nwss.on('connection', setupWSConnection);\n\nserver.on('upgrade', (request, socket, head) => {\n  // You may check auth of request here..\n  // See https://github.com/websockets/ws#client-authentication\n  const handleAuth = (ws: WebSocket) => {\n    wss.emit('connection', ws, request);\n  };\n  wss.handleUpgrade(request, socket, head, handleAuth);\n});\n\nserver.listen(port, host, () => {\n  console.log(`running at '${host}' on port ${port}`);\n});\n"],"names":[],"sourceRoot":""}